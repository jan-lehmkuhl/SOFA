/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;	//This is an scaling operation. Done at the end.

// approximate size of cells

deltax 0.015;	
deltay 0.015;	
deltaz 0.015;	

// size of bounding box

xminBb -0.0;  
xmaxBb  0.0;
yminBb -0.0;
ymaxBb  0.0;
zminBb -0.0;
zmaxBb  0.0;

// inflationfactor of bounding box 

Inf 0.01;

// calculation of blockMesh

xmin #calc "$xminBb - ($Inf * $deltax)";
xmax #calc "$xmaxBb + ($Inf * $deltax)";
ymin #calc "$yminBb - ($Inf * $deltay)";
ymax #calc "$ymaxBb + ($Inf * $deltay)";
zmin #calc "$zminBb - ($Inf * $deltaz)";
zmax #calc "$zmaxBb + ($Inf * $deltaz)";

lx #calc "$xmax - $xmin";
ly #calc "$ymax - $ymin";
lz #calc "$zmax - $zmin";

xcells #calc "round($lx/$deltax)";
ycells #calc "round($ly/$deltay)";
zcells #calc "round($lz/$deltaz)";

vertices
(
    ($xmin  $ymin  $zmin)	// 0
    ($xmax  $ymin  $zmin)	// 1
    ($xmax  $ymax  $zmin)	// 2
    ($xmin  $ymax  $zmin)	// 3
    ($xmin  $ymin  $zmax)	// 4
    ($xmax  $ymin  $zmax)	// 5
    ($xmax  $ymax  $zmax)	// 6
    ($xmin  $ymax  $zmax)	// 7
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading (1 1 1)
);

edges
(

);

boundary
(
    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type wall;
        faces
        (
            (2 6 5 1)
        );
    }
    bottom
    {
        type wall;
        faces
        (
            (0 1 5 4)
        );
    }
    front
    {
        type wall;
        faces
        (
            (4 5 6 7)
        );
    }
    back
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }
);

mergePatchPairs
(

);

// ************************************************************************* //
